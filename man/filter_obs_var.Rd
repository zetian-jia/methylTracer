% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/met_qc.R
\name{filter_obs_var}
\alias{filter_obs_var}
\title{Filter Observations and Variables Based on Cutoff Criteria}
\usage{
filter_obs_var(
  met_obj = NULL,
  obs_obj = "coverage_cells",
  var_obj = "coverage_feature",
  obs_cutoff = NULL,
  var_cutoff = NULL,
  sample_name = NULL,
  marker_name = NULL
)
}
\arguments{
\item{met_obj}{A \code{methylTracer} object containing methylation data.
It should have a \code{seed} slot containing the data matrix.}

\item{obs_obj}{A character string specifying the observation dataset
to filter (e.g., 'coverage_cells').}

\item{var_obj}{A character string specifying the variable dataset
to filter (e.g., 'coverage_feature').}

\item{obs_cutoff}{A numeric value for filtering observations.
Only observations with values ≥ this cutoff are retained.}

\item{var_cutoff}{A numeric value for filtering variables.
Only variables with values ≥ this cutoff are retained.}

\item{sample_name}{Optional; a character string for sample-based filtering
(not implemented).}

\item{marker_name}{Optional; a character string for marker-based filtering
(not implemented).}
}
\value{
A filtered matrix containing only observations and variables
meeting the specified cutoff criteria.
}
\description{
This function filters observations and variables in a methylation
dataset based on specified cutoff values. It retrieves data from
an HDF5 file and returns a filtered matrix containing only
observations and variables meeting the criteria.
}
\examples{
output_dir <- tempdir()
sam_info_df <- data.frame(
  sample_name = c(
    'sample_1.bed', 'sample_2.bed',
    'sample_3.bed', 'sample_4.bed',
    'sample_5.bed', 'sample_6.bed',
    'sample_7.bed', 'sample_8.bed'
  ),
  group = c(rep('case', 4), rep('ctrl', 4))
)
sam_info <- file.path(output_dir, 'sample_info.csv')

input_file_df <- data.frame(
  marker_name = c(
    'chr1_1000_2000', 'chr1_2000_3000',
    'chr1_3000_4000', 'chr1_4000_5000'
  ),
  sample_1.bed = c(100, 200, 600, 900),
  sample_2.bed = c(100, 200, 600, 900),
  sample_3.bed = c(100, 200, 600, 900),
  sample_4.bed = c(100, 200, 600, 900),
  sample_5.bed = c(800, 900, 100, 50),
  sample_6.bed = c(800, 900, 100, 50),
  sample_7.bed = c(800, 900, 100, 50),
  sample_8.bed = c(800, 900, 100, 50)
)
input_file <- file.path(output_dir, 'methylTracer_1kb.txt')

annotation_file_df <- data.frame(
  chr = rep('chr1', 4),
  start = c(1000, 2000, 3000, 4000),
  end = c(2000, 3000, 4000, 5000),
  SYMBOL = c('gene1', 'gene2', 'gene3', 'gene4'),
  marker_name = c(
    'chr1_1000_2000', 'chr1_2000_3000',
    'chr1_3000_4000', 'chr1_4000_5000'
  )
)
annotation_file <- file.path(output_dir, 'annotation.bed')

output_file <- 'methylTracer_obj_test.h5'

unlink(file.path(output_dir, output_file),
  recursive = TRUE
)

write.csv(sam_info_df, sam_info,
  row.names = FALSE
)
write.table(input_file_df, input_file,
  sep = '\t', row.names = FALSE
)
write.table(annotation_file_df, annotation_file,
  sep = '\t', row.names = FALSE
)

build_h5(
  sam_info = sam_info,
  input_file = input_file,
  output_dir = output_dir,
  output_file = output_file,
  annotation_file = annotation_file
)

met_obj <- build_met_obj(
  file.path(output_dir, output_file),
  sample_name = 'sample_name',
  marker_name = 'marker_name'
)

compute_qc_value(
  met_obj = met_obj
)

filter_met_obj <- filter_obs_var(
  met_obj = met_obj,
  obs_cutoff = 0,
  var_cutoff = 0,
  sample_name = 'sample_name',
  marker_name = 'marker_name'
)
}
