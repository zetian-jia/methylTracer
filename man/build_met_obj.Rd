% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/met_class.R
\name{build_met_obj}
\alias{build_met_obj}
\title{Create a methylTracer object from HDF5 file}
\usage{
build_met_obj(
  h5_file = NULL,
  sample_name = "sample_name",
  marker_name = "marker_name"
)
}
\arguments{
\item{h5_file}{Path to the HDF5 file containing methylation data.
This file should have datasets for both sample and marker
identifiers, as well as the methylation data.}

\item{sample_name}{Name of the dataset containing sample identifiers
in the /obs group. This should match the dataset
name where the sample identifiers are stored.}

\item{marker_name}{Name of the dataset containing marker identifiers
in the /var group. This should match the dataset
name where the marker identifiers are stored.}
}
\value{
A methylTracer object containing the methylation data and metadata.
This object will be structured with the sample and marker data
from the HDF5 file.
}
\description{
This function reads methylation data from an HDF5 file and constructs
a methylTracer object containing the methylation data and associated
metadata. The data should be structured with the sample identifiers
stored in the /obs group and marker identifiers in the /var group.
}
\examples{
toy_h5 <- system.file('extdata', 'toy.h5', package = 'HDF5Array')
X <- HDF5Array(toy_h5, 'M1') # Load data matrix from HDF5 file

num_rows <- dim(X)[1]
start_values <- seq(from = 10000, by = 1000, length.out = num_rows)
end_values <- start_values + 1000
marker_name <- paste0('chr1_', start_values, '_', end_values)
sample_name <- paste0('sample_', 1:dim(X)[2])

current_dir <- tempdir()
met_obj_test <- paste0(current_dir, '/methylTracer_obj_test.h5')
unlink(met_obj_test) # Remove existing file if it exists

rhdf5::h5createFile(met_obj_test)
rhdf5::h5createGroup(met_obj_test, 'obs')
rhdf5::h5createGroup(met_obj_test, 'var')

HDF5Array::writeHDF5Array(X, met_obj_test, 'X')
rhdf5::h5write(marker_name, met_obj_test, 'var/marker_name')
rhdf5::h5write(sample_name, met_obj_test, 'obs/sample_name')

met_obj_test <- build_met_obj(met_obj_test,
  sample_name = 'sample_name',
  marker_name = 'marker_name'
)

met_obj_test

head(met_obs(met_obj_test))

head(met_var(met_obj_test))
}
