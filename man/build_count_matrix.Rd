% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_count_matrix.R
\name{build_count_matrix}
\alias{build_count_matrix}
\title{Build a Methylation Count Matrix}
\usage{
build_count_matrix(
  sam_info = NULL,
  input_dir = NULL,
  annotation_file = NULL,
  output_file = NULL,
  thresholds = 3,
  bedtools = NULL,
  lib = NULL,
  parallel = 5,
  exclude_bed = NULL,
  genome_type = "human"
)
}
\arguments{
\item{sam_info}{Path to a sample file with sample or cell annotations.
The first column must be named 'sample_name'.}

\item{input_dir}{Path to the directory containing .bedGraph files.
Sample names should match those in sam_info. No trailing slash.}

\item{annotation_file}{A character vector of paths to .bed files defining
genomic windows. The length must match output_file entries.}

\item{output_file}{A character vector of output file names for methylation
count matrices. The length must match annotation_file.}

\item{thresholds}{Integer. Coverage threshold for base resolution filtering.}

\item{bedtools}{Path to bedtools executable.}

\item{lib}{Character string. Either 'TAPS' (default) or 'WGBS'. 'TAPS'
refers to directional conversion, 'WGBS' refers to indirect conversion.}

\item{parallel}{Integer. Cores for parallel processing. Default is
1.}

\item{exclude_bed}{A character vector of .bed files specifying regions to
exclude.}

\item{genome_type}{Character string. Either 'human' (default) or 'mouse'.}
}
\value{
The function writes the methylation count matrix to the specified
output_file.
\itemize{
\item \code{columnames}: input filenames
\item \code{rownames}: Unique identifier for each genomic region
(chr_start_end)
\item \code{values}: Methylation signal (range: 0 to 1000). By default,
methylTracer saves methylation data scaled by a factor of 1000.
}
}
\description{
Processes a set of .bedGraph files, filters them based on coverage
thresholds, and excludes regions defined in blacklist .bed files.
Uses human or mouse genome as reference, and calculates a methylation
count matrix with bedtools. The result is saved as a data.frame.
}
\details{
This function processes .bedGraph files to calculate a methylation count
matrix, filtering based on coverage thresholds user-specified
regions. The matrix is computed using bedtools and can be based on either
the human or mouse genome. The output is written as a data.frame and saved
to the specified output_file.
}
\examples{
output_dir <- tempdir()

sam_info_df <- data.frame(
  sample_name = c('sample_1.bed', 'sample_2.bed', 
                  'sample_3.bed', 'sample_4.bed'),
  group = c(rep('case', 2), rep('ctrl', 2))
)

sam_info <- file.path(output_dir, 'sample_info.csv')

input_file_df <- data.frame(
  marker_name = c('chr1_1000_2000', 'chr1_2000_3000',
                  'chr1_3000_4000', 'chr1_4000_5000'),
  sample_1.bed = c(100, 200, 600, 900),
  sample_2.bed = c(100, 200, 600, 900),
  sample_3.bed = c(200, 400, 700, 1000),
  sample_4.bed = c(300, 400, 700, 1000)
)
input_file <- file.path(output_dir, 'methylTracer_1kb.txt')

annotation_file_df <- data.frame(
  chr = rep('chr1', 4),
  start = c(1000, 2000, 3000, 4000),
  end = c(2000, 3000, 4000, 5000),
  SYMBOL = c('gene1', 'gene2', 'gene3', 'gene4'),
  marker_name = c('chr1_1000_2000', 'chr1_2000_3000',
                  'chr1_3000_4000', 'chr1_4000_5000')
)

annotation_file <- file.path(output_dir, 'annotation.bed')

output_file <- 'methylTracer_obj_test.h5'

unlink(file.path(output_dir, output_file), recursive = TRUE)

write.csv(sam_info_df, sam_info, row.names = FALSE)
write.table(input_file_df, input_file, sep = '\t', 
            row.names = FALSE)
write.table(annotation_file_df, annotation_file, 
             sep = '\t', row.names = FALSE)

## build_count_matrix(sam_info=sam_info, 
##                   input_dir=input_dir,
##                   annotation_file=annotation_file,
##                   output_file=output_file,
##                   thresholds=3,
##                   bedtools="PATH/bedtool")
}
